## Double hash is a velocity comment -- bad for markdown
#set($H1 = '#')
#set($H2 = '##')
#set($H3 = '###')

$H1 Usage

$H2 Project Directories

The following diagram shows the default layout used by the properties-constants-maven-plugin

    Project Root
     |
     +- src/main/resources             # directory scanned for properties files
     |
     +- target
          |
          +- generated-sources/prop-constants
                                       # directory to store generated java files

$H2 Simple properties

Reads `*.properties` files from `src/main/resources` and generates Java classes
in the package `de.r3s6.constants`. Support methods for Properties are generated.

The default template "keys" is used.

```xml
<build>
    <plugins>
        <plugin>
            <groupId>${project.groupId}</groupId>
            <artifactId>${project.artifactId}</artifactId>
            <version>${project.version}</version>
            <executions>
                <execution>
                    <phase>generate-sources</phase>
                    <goals>
                        <goal>generate</goal>
                    </goals>
                    <configuration>
                        <basePackage>de.r3s6.constants</basePackage>
                        <templateOptions>
                            <genGetPropertiesFilename>true</genGetPropertiesFilename>
                            <genLoadProperties>true</genLoadProperties>
                        </templateOptions>
                    </configuration>
                </execution>
            </executions>
        </plugin>
    </plugins>
</build>
```

To create constants that contains property values, use the template "values".

```xml
<build>
    <plugins>
        <plugin>
            <groupId>${project.groupId}</groupId>
            <artifactId>${project.artifactId}</artifactId>
            <version>${project.version}</version>
            <executions>
                <execution>
                    <phase>generate-sources</phase>
                    <goals>
                        <goal>generate</goal>
                    </goals>
                    <configuration>
                        <basePackage>de.r3s6.constants</basePackage>
                        <template>values</template>
                    </configuration>
                </execution>
            </executions>
        </plugin>
    </plugins>
</build>
```

$H2 I18N - ResourceBundle

Reads ResourceBundle properties files from `src/main/resources/i18n`. It ignores
files with a locale marker (like `messages_en.properties`). Support methods for
ResourceBundles are generated.

```xml
<build>
    <plugins>
        <plugin>
            <groupId>${project.groupId}</groupId>
            <artifactId>${project.artifactId}</artifactId>
            <version>${project.version}</version>
            <configuration>
                <basePackage>de.r3s6.constants.i18n</basePackage>
                <includes>
                    <include>i18n/*.properties</include>
                </includes>
                <excludes>
                    <exclude>i18n/*_??.properties</exclude>
                </excludes>
                <templateOptions>
                    <genGetBundleName>true</genGetBundleName>
                    <genLoadBundle>true</genLoadBundle>
                </templateOptions>
            </configuration>
            <executions>
                <execution>
                    <phase>generate-sources</phase>
                    <goals>
                        <goal>generate</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
    </plugins>
</build>
```

