#
# Copyright 2021 Ralf Schandl
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Deploy SNAPSHOT Packages to GitHub

on:
  push:
    branches: [master]

  workflow_dispatch:

jobs:
  windows-build:
    runs-on: windows-latest

    permissions:
      checks: write

    steps:
      - uses: actions/checkout@v3
        name: "Checking out."
      - uses: actions/setup-java@v3
        with:
         java-version: 11
         distribution: 'temurin'
         cache: maven

      - name: Maven Build with integration test
        run: mvn -B verify -Pit

  package:
    needs: windows-build
    runs-on: ubuntu-latest

    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
         java-version: 11
         distribution: 'temurin'
         cache: maven
         server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
         settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Extract Project version
        id: project
        run: echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Echo Project Version
        run: echo ${{ steps.project.outputs.version }}

      - name: Maven Build
        if:  ${{ endsWith(steps.project.outputs.version, '-SNAPSHOT') }}
        run: mvn -B clean verify -Pit

      - name: Publish to GitHub Packages Apache Maven
        if:  ${{ endsWith(steps.project.outputs.version, '-SNAPSHOT') }}
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}


